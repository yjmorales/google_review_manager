<?php
/**
 * @author Yenier Jimenez <yjmorales86@gmail.com>
 */

namespace App\Api\Core\Exception;

use Exception;

/**
 * Represents the high level for an api exception.
 */
abstract class AbstractApiException extends Exception
{
    /**
     * Holds the message list.
     *
     * @var string[]
     */
    private array $_messageList;

    /**
     * @param array          $messageList
     * @param                $code
     * @param Exception|null $previous
     */
    public final function __construct(array $messageList = [], $code = 0, Exception $previous = null)
    {
        parent::__construct($this->getApiErrorType()->getMessage(), $code, $previous);

        $this->_messageList = $messageList;
    }

    /**
     * Returns the message list,
     *
     * @return string[]
     */
    public function getMessageList(): array
    {
        return $this->_messageList;
    }

    /**
     * Each exception may be generated by an api error type.
     *
     * @return ApiErrorType
     */
    protected abstract function getApiErrorType(): ApiErrorType;
}